name: ci-build
on:
  push:
    branches:
      - master
    tags-ignore:
      - '*.*'
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  code-analysis:
    name: code-analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
          check-latest: true
      - uses: actions/cache@v2.1.7
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle
      - name: build-gradle
        run: ./gradlew build test install --build-cache --scan -s
      - name: Archive build results
        uses: actions/upload-artifact@v2.3.1
        if: always()
        with:
          name: ${{ runner.os }}-build-${{ github.sha }}
          path: build
      - name: integration-test
        if: runner.os != 'Windows'
        run: |
          export PATH=`pwd`/build/install/mulefd/bin:$PATH
          cd itests
          ./tests.sh
  testing:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: [8,11,17]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
          check-latest: true
      - uses: actions/download-artifact@v2.1.0
        with:
          name: ${{ runner.os }}-build-${{ github.sha }}
          path: build
      - name: Test Linux build
        if: runner.os == 'Linux'
        run: |
          java -version
          chmod +x ./build/install/mulefd/bin/mulefd
          ./build/install/mulefd/bin/mulefd --version
          ./build/install/mulefd/bin/mulefd ./build/resources/test/example-config.xml -d GRAPH -o test.png -t ./build/resources/test
      - name: Test Windows build
        if: runner.os == 'Windows'
        run: |
          java -version
          ./build/install/mulefd/bin/mulefd.bat --version
          ./build/install/mulefd/bin/mulefd.bat ./build/resources/test/example-config.xml -d GRAPH -o test.png -t ./build/resources/test
