plugins {
	id "java"
	id "maven-publish"
	id "application"
	id "com.diffplug.gradle.spotless" version "4.3.0"
	id "io.toolebox.git-versioner" version "1.6.7"
	id "com.github.gmazzo.buildconfig" version "3.1.0"
	id "org.sonarqube" version "3.3"
	id "jacoco"
}

application {
	mainClassName = 'com.javastreets.mulefd.Main'
}
repositories {
	mavenCentral()
}

// Reproducible build to preserve checksum value with rebuilds
tasks.withType(AbstractArchiveTask) {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}


test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport

}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.enabled true
		html.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
		xml.destination file("${buildDir}/jacocoXml")
	}
}

dependencies {
	implementation 'guru.nidi:graphviz-java-all-j2v8:0.17.0'
	implementation 'info.picocli:picocli:4.7.5'
	implementation 'org.slf4j:slf4j-nop:1.7.30'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.3'
	testImplementation 'org.assertj:assertj-core:3.25.3'
	testImplementation 'org.mockito:mockito-inline:4.9.0'
}

spotless {
	format 'misc', {
		target '**/*.gradle', '**/*.adoc', '**/.gitignore'
		targetExclude 'src/main/scripts/container/README.md', 'build/container/README.md'
		trimTrailingWhitespace()
		indentWithTabs(4) // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		importOrder 'java', 'javax', 'org', 'com', 'com.github.manikmagar', ''
		targetExclude 'build/generated/**/*.*'
		removeUnusedImports()
		eclipse().configFile "eclipse-java-google-style.xml"
	}
}
task versionTxt() {
	doLast {
		new File(project.buildDir, "tmp/version.txt").text = project.version
	}
}

distZip.dependsOn(versionTxt)
distTar.dependsOn(versionTxt)

publishing {
	publications {
		maven(MavenPublication) {
			from(components.java)
		}
	}
}

versioner {
	startFrom {
		major = 0
		minor = 0
		patch = 1
	}
	git {
		authentication {
			https {
				token = System.getenv("GITHUB_TOKEN") != null ? System.getenv("GITHUB_TOKEN") : "unknown_github_token"
			}
		}
	}
}

buildConfig {
	buildConfigField('String', 'APP_NAME', "\"${project.name}\"")
	buildConfigField('String', 'APP_VERSION', provider { "\"${project.version}\"" })
	buildConfigField('long', 'BUILD_TIME', "${System.currentTimeMillis()}L")
	packageName('com.javastreets.mulefd.app')
}

task tag(type: Exec) {
	doFirst {
		println 'Creating tag v' + project.version
		commandLine 'git', 'tag', '-a', 'v' + project.version, '-m', 'Release v' + project.version
	}
}

compileJava {
	options.encoding = 'UTF-8'
	// options.compilerArgs << "-Xlint:unchecked"
}

compileTestJava {
	options.encoding = 'UTF-8'
	// options.compilerArgs << "-Xlint:unchecked"
}

sonarqube {
	properties {
		property "sonar.projectKey", "manikmagar_mulefd"
		property "sonar.organization", "manikmagar"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/jacocoXml"
	}
}

group = 'com.javastreets'
sourceCompatibility = '8'
targetCompatibility = '8'
